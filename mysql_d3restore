#!/bin/bash

# ==========================
# Import functions
source `which mysql_d3_librc`

avaliable_commands_list='help data schema solid all truncate truncatetable drop'
function usage {
    echo ''
    echo 'Modify data in database'
    echo 'Import data from database__table--type.sql file , wo output'
    echo ''
    echo usage:
    echo '    '$cmd help;
    echo '    '$cmd all\|solid DATABASE;
    echo '    '$cmd data\|schema DATABASE [TABLE];
    echo example:
    echo '    '$cmd data mysql Users
    echo '    '$cmd schema mysql Users
    echo '    '$cmd truncate wpb
    echo
}

checkout_command $@
show_help $1

oldpwd=`pwd`;

if test $1 == 'solid'; then
    checkout_database $@
    # checkout_folder $@
    # sqlfile=$( ls -1 *.sql | grep -e '--solid.sql' | head -n 1 );
    # cd $3;
    mysql_import "$2" "$2--solid.sql";
    cd $oldpwd;
    exit;
fi

if test $1 == 'all'; then
    # mysqlimport
    checkout_database $@
    checkout_folder $@
    cd $3;
    mysql_d3restore drop $2;
    echo;
    for f in $( ls -1 $2__*--schema.sql ); do
        # extract table name
        f=${f%--schema.sql};
        f=${f#$2__};
        mysql_d3restore schema $2 $f;
    done
    echo;
    for f in $( ls -1 $2__*--data.sql ); do
        # extract table name
        f=${f%--data.sql};
        f=${f#$2__};
        mysql_d3restore data $2 $f;
    done
    echo;
    if [ `which column` ]; then
        mysql_d3info structure $2 | column -t;
    fi
    cd $oldpwd;
    exit;
fi

if test $1 == 'data'; then
    checkout_database $@
    checkout_table $@
    mysql_import "$2" "$2__$3--data.sql";
    exit;
fi

if test $1 == 'schema'; then
    checkout_database $@
    checkout_table $@
    mysql_import "$2" "$2__$3--schema.sql";
    exit;
fi

if test $1 == 'truncate'; then
    checkout_database $@
    # checkout_table $@
    if [ -z "$3" ]; then
        for TABLE in $( mysql_lambdaquery_showtables $2 ); do
            mysql_lambdaquery_write $2 "TRUNCATE $TABLE";
        done
        echo All TABLES were truncated;
    else
        mysql_lambdaquery_write $2 "TRUNCATE $3";
        echo TABLE $3 was truncated;
    fi
    exit;
fi

if test $1 == 'drop'; then
    checkout_database $@
    for TABLE in $( mysql_lambdaquery_showtables $2 ); do
        mysql_lambdaquery_write $2 "DROP TABLE IF EXISTS $TABLE";
    done
    echo All tables droped
    # mysql -D $1 -e "TRUNCATE $DATABASE";
    exit;
fi

not_recognized $1
