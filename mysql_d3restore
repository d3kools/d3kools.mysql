#!/bin/bash

# ==========================
# Import functions
source `which mysql_d3_librc`

avaliable_commands_list='help data schema solid all truncate truncatetable truncatedb'
function usage {
    echo ''
    echo 'Modify data in database'
    echo 'Import data from database__table--type.sql file , wo output'
    echo ''
    echo usage:
    echo '    '$cmd help;
    echo '    '$cmd all\|solid DATABASE;
    echo '    '$cmd data\|schema DATABASE [TABLE];
    echo example:
    echo '    '$cmd data mysql Users
    echo '    '$cmd schema mysql Users
    echo '    '$cmd truncate wpb
    echo
}

checkout_command $@
oldpwd=`pwd`;

if test $1 == 'help'; then
    usage;
    exit;
fi

if test $1 == 'solid'; then
    # echo '$0:' $0; echo '$1:' $1; echo '$2:' $2; echo '$3:' $3; echo '$4:' $4;
    checkout_database $@
    checkout_folder $@
    # sqlfile=$( ls -1 *.sql | grep -e '--solid.sql' | head -n 1 );
    sqlfile=$2--solid.sql;
    cd $3;
    if [ -f $sqlfile ]; then
        echo injecting $sqlfile ...;
        $cmd_mysql -D $2 < $sqlfile;
    else
        echo $sqlfile not found;
    fi
    cd $oldpwd;
    exit;
fi


if test $1 == 'all'; then
    # mysqlimport
    checkout_database $@
    checkout_folder $@
    sqlfile=$( ls -1 *.sql | grep -e '--solid.sql' | head -n 1 );
    cd $oldpwd;
    exit;
fi

if test $1 == 'data'; then
    checkout_database $@
    checkout_table $@
    echo 'mysql_d3restore >> data'
    cd $oldpwd;
    exit;
fi

if test $1 == 'schema'; then
    checkout_database $@
    checkout_table $@
    echo 'mysql_d3restore >> schema'
    exit;
fi

if test $1 == 'truncate'; then
    checkout_database $@
    for TABLE in $( mysql_lambda_query $2 "SHOW TABLES" ); do
        mysql_lambda_query $2 "TRUNCATE $TABLE";
    done
    echo All TABLES were truncated
    exit;
fi

if test $1 == 'truncatetable'; then
    echo todo : join with truncate
    exit;
    # DEPRECATED
    checkout_database $@
    checkout_table $@
    mysql_lambda_query $2 "TRUNCATE $3";
    echo TABLE $3 was truncated
    exit;
fi

if test $1 == 'drop'; then
    checkout_database $@
    for TABLE in $( mysql_lambda_query $2 "SHOW TABLES" ); do
        mysql_lambda_query $2 "DROP TABLE IF EXISTS $TABLE";
    done
    echo All tables droped
    # mysql -D $1 -e "TRUNCATE $DATABASE";
    exit;
fi

not_recognized $1
